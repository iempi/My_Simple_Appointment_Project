@{
    ViewData["Title"] = "Home Page";
}







<!-- Login Modal -->
<div class="modal fade" id="loginPanel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Login</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <img src="/images/logos/LoginLogo.png" class="myHeight160" />
                </div>
                <br />
                <label for="username">Username</label>
                <input type="text" class="form-control" id="username" placeholder="Username..">
                <small id="emailHelp" class="form-text text-muted">Please enter your username..</small>
                <br />
                <label for="password">Password</label>
                <input type="password" class="form-control" id="password" placeholder="Password..">
                <small id="emailHelp" class="form-text text-muted">Please enter your password..</small>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-success" id="btnLogin">Login</button>
            </div>
        </div>
    </div>
</div>


<!-- Registration Modal -->
<div class="modal fade" id="registrationPanel" tabindex="-1" role="dialog" aria-labelledby="registratoinPanelLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="registrationPanelLabel">Registration</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <img src="/images/logos/AddLogo.png" class="myHeight160" />
                </div>
                <br />
                <label for="username">New Username</label>
                <input type="text" class="form-control" id="newUsername" placeholder="Username..">
                <small class="form-text text-muted">Please choose a new username..</small>
                <br />
                <label for="password">Password</label>
                <input type="password" class="form-control" id="newPassword" placeholder="Password..">
                <small class="form-text text-muted">Please enter password..</small>
                <a href="#" data-toggle="modal" data-dismiss="modal" data-target="#loginPanel">Already a user ?</a>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" id="btnRegister" class="btn btn-success">Register</button>
            </div>
        </div>
    </div>
</div>






<br />

<div class="text-center" id="checkAppointmentsButtonPanel">
    
    
</div>

<div id="appointmentsPanel" class="container-fluid w-75" style="display: none">
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Time</th>
                <th scope="col">Date</th>
                <th scope="col">Your Comment</th>
                <th scope="col">Status</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody id="appointmentRequestTable">
        </tbody>
    </table>
    <hr />
    <br />
</div>


<div style="background-color: rgb(232, 232, 232); border-radius: 20px; padding: 20px">

    <div>
        <br />
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-9">
                    <div class="row">
                        <div class="col-md-5">
                            <label for="time">Select Time:</label>
                            <div class="input-group clockpicker" data-autoclose="true">
                                <input id="time" type="text" class="form-control" value="" placeholder="Click to set the time">
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-time"></span>
                                </span>
                            </div>
                        </div>
                        <div class="col-md-5">
                            <label for="date">Select Date:</label>
                            <div class="input-group input-daterange date ">
                                <input id="date" type="text" class="form-control" value="" placeholder="Click to pick a date">

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <br />
                                <label for="exampleFormControlTextarea1">
                                    Comment:
                                    <span class="font-weight-light">
                                        (optional)
                                    </span>
                                </label>
                                <textarea id="comment" class="form-control" id="exampleFormControlTextarea1" rows="3"></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <button id="btnAppointment" class="btn btn-info">Make the appointment</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <img src="~/images/logos/AppoinmentLogo.png" />
                </div>
            </div>
        </div>
        <br /><br />
    </div>
</div>


<br />
<br />
<div class="row justify-content-center" id="btnPanel">

</div>










@section Scripts
{
    <script src="~/js/timepicker/dist/jquery-clockpicker.min.js"></script>
    <script>

        function deleteRequest(requestId) {

            Swal.fire({
                title: 'Are you sure?',
                text: "Your request will be cancelled",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'No',
                confirmButtonText: 'Yes, cancel it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Heka.Startup.ApiUrl/api/Appointment/DeleteAppointmentRequest/'+requestId,
                        type: 'POST',
                        contentType: 'application/json',
                        //dataType: "json",
                        beforeSend: function(xhr) {
                            xhr.setRequestHeader("Authorization", localStorage.getItem('token'));
                        },
                        success: function (res) {
                            if (res.isDone === "False") {
                                swal.fire({
                                    timer: 3500,
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    title: "Error",
                                    text: res.message,
                                    icon: 'error'
                                });
                            } else {
                                swal.fire({
                                    timer: 3000,
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    title: "Done !",
                                    text: res.message,
                                    icon: 'success'
                                }).then(function() {
                                    window.location.reload();
                                });
                            }
                        },
                        error: function(err) {
                            swal.fire({
                                timer: 1000,
                                showCancelButton: false,
                                showConfirmButton: false,
                                title: "Error",
                                text: "Server did not response correctly",
                                icon: 'error'
                            });
                        }
                    });
                }
            })

        }

        function goToAdminPanel() {
            $.ajax({
                url: '@Heka.Startup.ApiUrl/api/Authentication/IsAdmin',
                type: 'GET',
                contentType: 'application/json',
                //dataType: "json",
                beforeSend: function(xhr) {
                    xhr.setRequestHeader("Authorization", localStorage.getItem('token'));
                },
                success: function(res) {
                    if (res === false) {
                        swal.fire({
                            timer: 4000,
                            showCancelButton: false,
                            showConfirmButton: false,
                            title: "You are not admin",
                            text: "You don't have access to the page",
                            icon: 'error'
                        });
                    } else {
                        location.replace('/User/AdminPanel');
                    }
                },
                error: function(err) {
                    swal.fire({
                        timer: 1000,
                        showCancelButton: false,
                        showConfirmButton: false,
                        title: "Error",
                        text: "Server did not response correctly",
                        icon: 'error'
                    });
                }
            });
        }

        $(document).ready(function () {




            $('.clockpicker').clockpicker();
            $('.input-daterange input').each(function() {
                $(this).datepicker('clearDates');
            });


            if (localStorage.getItem('token') === null) {
                $("#btnPanel").append('<button class="btn btn-primary" data-toggle="modal" data-target="#loginPanel">Login</button><span>   </span><button class="btn btn-warning" data-toggle="modal" data-target="#registrationPanel">Register</button>');
            } else {
                $.ajax({
                    url: '@Heka.Startup.ApiUrl/api/Authentication/IsAdmin',
                    type: 'GET',
                    contentType: 'application/json',
                    //dataType: "json",
                    beforeSend: function(xhr) {
                        xhr.setRequestHeader("Authorization", localStorage.getItem('token'));
                    },
                    success: function(res) {
                        if (res === true) {
                            $("#btnPanel").append('<span>   </span><button class="btn btn-success" href="/User/AdminPanel" id="btnGoToAdminPanel" onclick="goToAdminPanel()">Admin Panel</button>');
                        }
                    },
                    error: function(err) {
                        swal.fire({
                            timer: 1000,
                            showCancelButton: false,
                            showConfirmButton: false,
                            title: "Error",
                            text: "Server did not response correctly",
                            icon: 'error'
                        });
                    }
                });
                $("#btnPanel").append('<button class="btn btn-danger" id="btnLogout">Logout</button>');
                $("#checkAppointmentsButtonPanel").append('<button class="btn btn-success" id="btnAppointmentRequest">My Appointment Requests</button><br/><br/>');
            }

            $("#btnRegister").on("click",
                function() {
                    var newPassword = String($("#newPassword").val());
                    var newUsername = String($("#newUsername").val());

                    $.ajax({
                        url: '@Heka.Startup.ApiUrl/api/User/Register',
                        type: 'POST',
                        contentType: 'application/json',
                        //dataType: "json",
                        //beforeSend: function(xhr) {
                        //    xhr.setRequestHeader("Authorization",localStorage.getItem('token'));
                        //}
                        data: JSON.stringify({
                            username: newUsername,
                            password: newPassword
                        }),
                        success: function(res) {
                            if (res === "DuplicatedUserName") {
                                swal.fire({
                                    timer: 3500,
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    title: "Error",
                                    text: "Username is taken, try another username",
                                    icon: 'error'
                                });
                            } else {
                                localStorage.setItem('token', String(res));
                                swal.fire({
                                    timer: 3000,
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    title: "Registration Done successfully",
                                    text: "Now you can make an appointment",
                                    icon: 'success'
                                }).then(function() {
                                    window.location.reload();
                                });
                            }
                        },
                        error: function(err) {
                            swal.fire({
                                timer: 1000,
                                showCancelButton: false,
                                showConfirmButton: false,
                                title: "Error",
                                text: "Server did not response correctly",
                                icon: 'error'
                            });
                        }
                    });
                });

            $("#btnAppointment").on("click",
                function() {
                    var time = String($("#time").val());
                    var date = String($("#date").val());
                    var comment = String($("#comment").val());

                    $.ajax({
                        url: '@Heka.Startup.ApiUrl/api/Appointment/SetAppointment',
                        type: 'POST',
                        contentType: 'application/json',
                        //dataType: "json",
                        beforeSend: function(xhr) {
                            xhr.setRequestHeader("Authorization", localStorage.getItem('token'));
                        },
                        data: JSON.stringify({
                            Time: time,
                            Date: date,
                            Comment: comment
                        }),
                        success: function(res) {
                            if (res.isDone === "False") {
                                swal.fire({
                                    timer: 4000,
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    title: "No free time",
                                    text: res.message,
                                    icon: 'error'
                                });
                            } else {
                                swal.fire({
                                    timer: 3000,
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    title: "Done !",
                                    text: res.message,
                                    icon: 'success'
                                }).then(function() {
                                    window.location.reload();
                                });
                            }
                        },
                        error: function(err) {
                            swal.fire({
                                timer: 1000,
                                showCancelButton: false,
                                showConfirmButton: false,
                                title: "Error",
                                text: "Server did not response correctly",
                                icon: 'error'
                            });
                        }
                    });
                });

            $("#btnAppointmentRequest").on("click",
                function() {
                    $.ajax({
                        url: '@Heka.Startup.ApiUrl/api/Appointment/GetUserAppointments',
                        type: 'GET',
                        contentType: 'application/json',
                        //dataType: "json",
                        beforeSend: function(xhr) {
                            xhr.setRequestHeader("Authorization", localStorage.getItem('token'));
                        },
                        success: function (res) {
                            if (res === "No Appointments") {
                                swal.fire({
                                    timer: 2000,
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    text: "No Appointments",
                                    icon: 'error'
                                });
                            } else {
                                $("#appointmentsPanel").toggle(800);
                                $("#appointmentRequestTable").html("");
                                var status;
                                $.each(res,
                                    function (i, item) {
                                        if (item.status === "inProgress") {
                                            status = '<span class="badge badge-warning">In Progress</span>';
                                        }
                                        if (item.status === "confirmed") {
                                            status = '<span class="badge badge-success">Confirmed</span>';
                                        }
                                        if (item.status === "rejected") {
                                            status = '<span class="badge badge-danger">Rejected</span>';
                                        }
                                        $('#appointmentRequestTable').append('<tr><th scope="row">' + (i + 1) + '</th><td>' + item.time + '</td><td>' + item.date + '</td><td>' + item.comment + '</td><td>' + status + '</td><td><button class="btn btn-sm btn-outline-danger" onclick="deleteRequest(' + item.appointmentId+')">Cancel Request</button></td></tr>');
                                    });
                            }
                        },
                        error: function(err) {
                            swal.fire({
                                timer: 1000,
                                showCancelButton: false,
                                showConfirmButton: false,
                                title: "Error",
                                text: "Server did not response correctly",
                                icon: 'error'
                            });
                        }
                    });
                });

            $("#btnLogin").on("click",
                function() {

                    var password = String($("#password").val());
                    var username = String($("#username").val());

                    $.ajax({
                        url: '@Heka.Startup.ApiUrl/api/Authentication/Login',
                        type: 'POST',
                        contentType: 'application/json',
                        //dataType: "json",
                        //beforeSend: function(xhr) {
                        //    xhr.setRequestHeader("Authorization",localStorage.getItem('token'));
                        //}
                        data: JSON.stringify({
                            username: username,
                            password: password
                        }),
                        success: function(res) {
                            if (res.token === "Username or password is incorrect") {
                                swal.fire({
                                    timer: 1000,
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    title: "Error",
                                    text: "Username or password is incorrect",
                                    icon: 'error'
                                });
                            } else {
                                localStorage.setItem('token', String(res.token));
                                swal.fire({
                                    timer: 1000,
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    title: "You LoggedIn",
                                    text: "Login successfully",
                                    icon: 'success'
                                }).then(function() {
                                    window.location.reload();
                                });
                            }

                        },
                        error: function(err) {
                            swal.fire({
                                timer: 1000,
                                showCancelButton: false,
                                showConfirmButton: false,
                                title: "Error",
                                text: "Server did not response correctly",
                                icon: 'error'
                            });
                        }
                    });
                });

            $("#btnLogout").on("click",
                function() {

                    localStorage.removeItem('token');

                    swal.fire({
                        timer: 1000,
                        showCancelButton: false,
                        showConfirmButton: false,
                        title: "You LoggedOut",
                        text: "Logout successfully",
                        icon: 'success'
                    }).then(function() {
                        window.location.reload();
                    });

                });

        });


    </script>
}

